{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww23260\viewh15720\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs26 \cf0 How to make the oska thing work:\
\
GAME RULES:\
- Start with one row of pieces on each end\
- You can move diagonally left or right\
- You can also jump diagonally left or right\
- If you jump over opponent\'92s piece, you can take it off the board (?)\
- First person to get all their pieces to the other side wins\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 TIMELINE:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 8/5 - 8/6: Figure out how algorithm works, run it a couple of times, play the game on paper. Figure out if algorithm can be translated to JS\
8/8 - 8/10: Design game board using HTML/CSS\
8/11 - 8/13: Complete JS (interaction part)\
8/16 - 8/31: Run algorithm and change result accordingly\
9/1 - 9/4: Design improvements - change the circles and squares to actual graphics\
9/5 - 9/15: Add new feature - Change game board size based on user input. Design home/launch page.\
\
\
FRONT END:\
\
1. Design (html + css only?)\
	- Background graphics \
	- For now, have 4-5 rows (no. of rows can later be changed with javascript)\
	- Have separate graphics for pieces (for now they can be circles)\
	- Circles can be absolutely positioned over squares\
\
2. Interaction (user vs. computer):\
	- Need a variable to keep track of whose turn it is\
	- When it is user\'92s turn, when user clicks on piece, square turns yellow (border). Possible new positions also turn yellow.\
	- Log a flag variable saying piece has been clicked. \
	- Next, user can click an empty square (one of the highlighted ones). Position of circle changes to new position.\
	- To change position, we can make the first circle disappear and make a new circle appear over the new square.\
	- To make it easier, maybe initially all the squares can have hidden circles that appear and disappear as game progresses.\
	- Computer\'92s turn (need to run the algorithm and parse the result, then display accordingly).\
\
3. Algorithm:\
	- \
}